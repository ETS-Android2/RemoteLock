def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "no.joymyr.remotelock"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 66
        versionName "2.6.0"
        resConfigs "en"
    }

    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        all {
            resValue("string", "pushbullet_key", localProperties['pushbulletKey'])
            resValue("string", "mqtt_uri", localProperties['mqttUri'])
            resValue("string", "mqtt_username", localProperties['mqttUsername'])
            resValue("string", "mqtt_password", localProperties['mqttPassword'])
            resValue("string", "mqtt_lock_cmd_topic", localProperties['mqttLockCmdTopic'])
            resValue("string", "mqtt_lock_evt_topic", localProperties['mqttLockEvtTopic'])
            resValue("string", "mqtt_alarm_evt_topic", localProperties['mqttAlarmEvtTopic'])
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation project(':common')
    //noinspection GradleDependency
    implementation 'androidx.appcompat:appcompat:1.0.0'
    //noinspection GradleDependency
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'no.nordicsemi.android:log:2.1.1'
    implementation 'no.nordicsemi.android.support.v18:scanner:1.1.0'
    // The DFU Library is imported automatically from jcenter:
    implementation 'no.nordicsemi.android:dfu:1.6.1'
    // if you desire to build the DFU Library, clone the https://github.com/NordicSemiconductor/Android-DFU-Library project into DFULibrary folder,
    // add it as a module into the project structure and uncomment the following line (and also the according lines in the settings.gradle):
    // implementation project(':dfu')
    // Import the BLE Library
    implementation 'no.nordicsemi.android:ble:1.2.0'
    // The BLE Library may be included from jcenter. If you want to modify the code,
    // clone the project from GitHub and replace the line above with the following
    // (and also the according lines in the settings.gradle):
    // implementation project(':ble')
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation('org.simpleframework:simple-xml:2.7.1') {
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'xpp3', module: 'xpp3'
    }
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.6.0-RC2"

    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
}
// temporary workaround for support library version mismatch
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '28.0.0'
            }
        }
    }
}

repositories {
    mavenCentral()
}